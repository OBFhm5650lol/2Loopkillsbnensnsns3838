local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Create the GUI with modern styling
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "LoopBringGUI"
ScreenGui.Parent = game:GetService("CoreGui") or LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame with shadow effect (smaller size)
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 220, 0, 160) -- Increased height for dropdown
Frame.Position = UDim2.new(0.5, -110, 0.5, -80) -- Adjusted position
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

-- Drop shadow effect
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.8
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(0, -10, 0, -10)
shadow.BackgroundTransparency = 1
shadow.ZIndex = -1
shadow.Parent = Frame

-- Rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = Frame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 24) -- Smaller title bar
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
TitleBar.BorderSizePixel = 0
TitleBar.ZIndex = 2
TitleBar.Parent = Frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = TitleBar

-- Title Text
local Title = Instance.new("TextLabel")
Title.Text = "üîÅ LoopKill | TCMD"
Title.Size = UDim2.new(1, -40, 1, 0) -- Adjusted size
Title.Position = UDim2.new(0, 8, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(220, 220, 220)
Title.Font = Enum.Font.GothamSemibold
Title.TextSize = 13 -- Smaller text
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.ZIndex = 2
Title.Parent = TitleBar

-- Close Button (modern style)
local CloseButton = Instance.new("ImageButton")
CloseButton.Size = UDim2.new(0, 18, 0, 18) -- Smaller button
CloseButton.Position = UDim2.new(1, -26, 0, 3) -- Adjusted position
CloseButton.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
CloseButton.Image = "rbxassetid://3926305904"
CloseButton.ImageColor3 = Color3.fromRGB(220, 220, 220)
CloseButton.ImageRectOffset = Vector2.new(284, 4)
CloseButton.ImageRectSize = Vector2.new(24, 24)
CloseButton.ZIndex = 2
CloseButton.Parent = TitleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = CloseButton

-- Main content frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, 0, 1, -24) -- Adjusted for smaller title bar
ContentFrame.Position = UDim2.new(0, 0, 0, 24) -- Adjusted position
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 1
ContentFrame.Parent = Frame

-- Input Box with better styling
local InputBox = Instance.new("TextBox")
InputBox.Size = UDim2.new(0.8, 0, 0, 24) -- Smaller height
InputBox.Position = UDim2.new(0.1, 0, 0.1, 0) -- Adjusted position for dropdown
InputBox.PlaceholderText = "Enter player name or 'all'"
InputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
InputBox.TextColor3 = Color3.fromRGB(220, 220, 220)
InputBox.Font = Enum.Font.Gotham
InputBox.TextSize = 11 -- Smaller text
InputBox.ClearTextOnFocus = false
InputBox.ZIndex = 2
InputBox.Parent = ContentFrame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 6)
inputCorner.Parent = InputBox

local inputPadding = Instance.new("UIPadding")
inputPadding.PaddingLeft = UDim.new(0, 6)
inputPadding.Parent = InputBox

-- Position Dropdown - Updated with proper ZIndex
local DropdownFrame = Instance.new("Frame")
DropdownFrame.Size = UDim2.new(0.8, 0, 0, 24)
DropdownFrame.Position = UDim2.new(0.1, 0, 0.3, 0)
DropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
DropdownFrame.ZIndex = 3  -- Higher than other elements
DropdownFrame.Parent = ContentFrame

local dropdownCorner = Instance.new("UICorner")
dropdownCorner.CornerRadius = UDim.new(0, 6)
dropdownCorner.Parent = DropdownFrame

local Dropdown = Instance.new("TextButton")
Dropdown.Size = UDim2.new(1, 0, 1, 0)
Dropdown.BackgroundTransparency = 1
Dropdown.Text = "Position: None"
Dropdown.TextColor3 = Color3.fromRGB(220, 220, 220)
Dropdown.Font = Enum.Font.Gotham
Dropdown.TextSize = 11
Dropdown.ZIndex = 3  -- Match parent
Dropdown.Parent = DropdownFrame

local dropdownPadding = Instance.new("UIPadding")
dropdownPadding.PaddingLeft = UDim.new(0, 6)
dropdownPadding.Parent = Dropdown

local DropdownOptions = Instance.new("Frame")
DropdownOptions.Size = UDim2.new(1, 0, 0, 0)
DropdownOptions.Position = UDim2.new(0, 0, 1, 2)
DropdownOptions.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
DropdownOptions.Visible = false
DropdownOptions.ZIndex = 4  -- Highest in the hierarchy
DropdownOptions.Parent = DropdownFrame

local optionsCorner = Instance.new("UICorner")
optionsCorner.CornerRadius = UDim.new(0, 6)
optionsCorner.Parent = DropdownOptions

local optionsLayout = Instance.new("UIListLayout")
optionsLayout.Parent = DropdownOptions

local positionOptions = {
    "MeleeMode",
    "GunMode",
}

local selectedPosition = "MeleeMode"  -- Default to MeleeMode

local function createOption(option)
    local optionButton = Instance.new("TextButton")
    optionButton.Size = UDim2.new(1, 0, 0, 24)
    optionButton.BackgroundTransparency = 1
    optionButton.Text = option
    optionButton.TextColor3 = Color3.fromRGB(220, 220, 220)
    optionButton.Font = Enum.Font.Gotham
    optionButton.TextSize = 11
    optionButton.TextXAlignment = Enum.TextXAlignment.Left
    optionButton.ZIndex = 4
    optionButton.Parent = DropdownOptions
    
    local optionPadding = Instance.new("UIPadding")
    optionPadding.PaddingLeft = UDim.new(0, 6)
    optionPadding.Parent = optionButton
    
    optionButton.MouseButton1Click:Connect(function()
        selectedPosition = option
        Dropdown.Text = "Position: "..option
        DropdownOptions.Visible = false
        DropdownOptions.Size = UDim2.new(1, 0, 0, 0)
    end)
    
    optionButton.MouseEnter:Connect(function()
        optionButton.BackgroundTransparency = 0.8
    end)
    
    optionButton.MouseLeave:Connect(function()
        optionButton.BackgroundTransparency = 1
    end)
end

for _, option in ipairs(positionOptions) do
    createOption(option)
end

Dropdown.MouseButton1Click:Connect(function()
    DropdownOptions.Visible = not DropdownOptions.Visible
    if DropdownOptions.Visible then
        DropdownOptions.Size = UDim2.new(1, 0, 0, #positionOptions * 24)
    else
        DropdownOptions.Size = UDim2.new(1, 0, 0, 0)
    end
end)

-- Bring Button with hover effects (lower ZIndex than dropdown)
local BringButton = Instance.new("TextButton")
BringButton.Size = UDim2.new(0.6, 0, 0, 24) -- Smaller height
BringButton.Position = UDim2.new(0.2, 0, 0.6, 0) -- Adjusted position for dropdown
BringButton.Text = "START LOOPKILL"
BringButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
BringButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BringButton.Font = Enum.Font.GothamSemibold
BringButton.TextSize = 11 -- Smaller text
BringButton.ZIndex = 2  -- Lower than dropdown
BringButton.Parent = ContentFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = BringButton

-- Status Label with better styling
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.8, 0, 0, 18) -- Smaller height
StatusLabel.Position = UDim2.new(0.1, 0, 0.85, 0) -- Adjusted position
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
StatusLabel.Text = "Ready to bring players"
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 10 -- Smaller text
StatusLabel.ZIndex = 2
StatusLabel.Parent = ContentFrame

-- Button hover effects
local function buttonHoverEffect(button)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = button == BringButton and Color3.fromRGB(0, 140, 255) or Color3.fromRGB(70, 70, 75)}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = button == BringButton and Color3.fromRGB(0, 120, 215) or Color3.fromRGB(50, 50, 55)}):Play()
    end)
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = button == BringButton and Color3.fromRGB(0, 100, 180) or Color3.fromRGB(90, 90, 95)}):Play()
    end)
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = button == BringButton and Color3.fromRGB(0, 140, 255) or Color3.fromRGB(70, 70, 75)}):Play()
    end)
end

buttonHoverEffect(BringButton)
buttonHoverEffect(CloseButton)
buttonHoverEffect(Dropdown)

-- Drag functionality (cross-platform)
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        -- Highlight when dragging
        TweenService:Create(Frame, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(40, 40, 45)}):Play()
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                TweenService:Create(Frame, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(30, 30, 35)}):Play()
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Store original positions and transparency values
local originalPositions = {}
local originalTransparency = {}

-- LoopBring functionality
local bringing = false
local connection

local function saveOriginalState(player)
    if not player.Character then return end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        originalPositions[player] = humanoidRootPart.CFrame
    end
    
    -- Save original transparency values
    originalTransparency[player] = {}
    for _, part in pairs(player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            originalTransparency[player][part] = part.Transparency
        elseif part:IsA("ParticleEmitter") or part:IsA("Trail") then
            originalTransparency[player][part] = part.Enabled
        end
    end
end

local function restoreOriginalState(player)
    -- Restore position
    if originalPositions[player] and player.Character then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = originalPositions[player]
        end
    end
    originalPositions[player] = nil
    
    -- Restore transparency and particles
    if originalTransparency[player] and player.Character then
        for part, value in pairs(originalTransparency[player]) do
            if part and part.Parent then
                if part:IsA("BasePart") then
                    part.Transparency = value
                elseif (part:IsA("ParticleEmitter") or part:IsA("Trail")) then
                    part.Enabled = value
                end
            end
        end
    end
    originalTransparency[player] = nil
end

local function getBringPosition()
    if LocalPlayer.Character then
        local localRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if localRootPart then
            -- Return position based on selected option
            if selectedPosition == "MeleeMode" then
                return localRootPart.CFrame * CFrame.new(1.7, 4.7, -1.5)
            elseif selectedPosition == "GunMode" then
                return localRootPart.CFrame * CFrame.new(0, 0, -6)
            end
        end
    end
    return nil
end

local spinSpeed = 10 -- Adjust this number to change rotation speed (higher = faster)

local function makeCharacterInvisible(character)
    if not character then return end
    
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 1 -- Make completely invisible
        elseif part:IsA("ParticleEmitter") or part:IsA("Trail") then
            part.Enabled = false -- Disable particles/trails
        end
    end
end

local function bringPlayer(player)
    if not player.Character then return end
    
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    local bringPosition = getBringPosition()
    
    if humanoidRootPart and bringPosition then
        -- Save original state if not already saved
        if not originalPositions[player] then
            saveOriginalState(player)
            makeCharacterInvisible(player.Character)
        end
        
        -- Apply spinning effect while maintaining position
        local spinCFrame = bringPosition * CFrame.Angles(0, math.rad(os.clock() * 360 * spinSpeed), 0)
        humanoidRootPart.CFrame = spinCFrame
        
        -- Freeze their physics to prevent drifting
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        humanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    end
end

local function loopBring()
    if bringing then return end
    
    local target = InputBox.Text:lower()
    if target == "" then 
        StatusLabel.Text = "Please enter a player name!"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
        task.delay(2, function()
            if StatusLabel.Text == "Please enter a player name!" then
                StatusLabel.Text = "Ready to kill players"
                StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
            end
        end)
        return 
    end
    
    bringing = true
    BringButton.Text = "STOP LOOPKILL"
    BringButton.BackgroundColor3 = Color3.fromRGB(215, 60, 0)
    
    if target == "all" then
        StatusLabel.Text = "LoopKill all players..."
        
        -- Save all players' states first
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                saveOriginalState(player)
                makeCharacterInvisible(player.Character)
            end
        end
        
        connection = RunService.Heartbeat:Connect(function()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    bringPlayer(player)
                end
            end
        end)
    else
        StatusLabel.Text = "Searching for "..target.."..."
        local foundPlayer = nil
        
        -- Find the player first
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Name:lower():find(target) then
                foundPlayer = player
                saveOriginalState(player)
                makeCharacterInvisible(player.Character)
                StatusLabel.Text = "Bringing "..player.Name
                break
            end
        end
        
        if not foundPlayer then
            StatusLabel.Text = "Player not found!"
            StatusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
            task.delay(2, function()
                if StatusLabel.Text == "Player not found!" then
                    StatusLabel.Text = "Ready to kill players"
                    StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                end
            end)
            stopBringing()
            return
        end
        
        connection = RunService.Heartbeat:Connect(function()
            bringPlayer(foundPlayer)
        end)
    end
end

local function stopBringing()
    bringing = false
    if connection then
        connection:Disconnect()
        connection = nil
    end
    
    -- Restore original states
    for player, _ in pairs(originalPositions) do
        restoreOriginalState(player)
    end
    
    BringButton.Text = "START LOOPKILL"
    BringButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    StatusLabel.Text = "Ready to kill players"
    StatusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
end

BringButton.MouseButton1Click:Connect(function()
    if not bringing then
        loopBring()
    else
        stopBringing()
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    -- Stop bringing and restore positions before closing
    stopBringing()
    ScreenGui:Destroy()
end)

-- Clean up if player leaves
LocalPlayer.CharacterRemoving:Connect(function()
    stopBringing()
end)

-- Set default position
Dropdown.Text = "Position: "..selectedPosition
